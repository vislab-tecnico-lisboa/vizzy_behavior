<root>
    <TreeNodesModel>
        <Action ID="ArmCartesian">
            <input_port name="action_name"/>
            <input_port name="frame_id"/>
            <input_port name="pose"/>
            <input_port name="type"/>
        </Action>
        <Action ID="ArmRoutines">
            <input_port name="gesture"/>
            <input_port name="topic"/>
        </Action>
        <Action ID="Charge">
            <input_port name="action"/>
            <input_port name="action_name"/>
        </Action>
        <Action ID="CheckBattery">
            <output_port name="battery_state" type="int"/>
            <output_port name="percentage" type="double"/>
            <input_port name="service_name" type="std::string"/>
        </Action>
        <Condition ID="CheckBool">
            <input_port name="variable"/>
        </Condition>
        <Action ID="CheckCharging">
            <output_port name="charging_state" type="int"/>
            <input_port name="service_name" type="std::string"/>
        </Action>
        <Condition ID="CompareDouble">
            <input_port name="A"/>
            <input_port name="B"/>
            <input_port name="Condition"/>
        </Condition>
        <Condition ID="CompareInt">
            <input_port name="A"/>
            <input_port name="B"/>
            <input_port name="Condition"/>
        </Condition>
        <Action ID="DebugAction">
            <input_port name="string" type="std::string"/>
        </Action>
        <Action ID="Destroy"/>
        <Action ID="DetectFaces">
            <output_port name="faceListOut"/>
            <input_port name="face_topic"/>
        </Action>
        <Action ID="FaceCounter">
            <input_port name="faceListIn"/>
            <input_port name="number_faces"/>
        </Action>
        <Action ID="GazeAtTarget">
            <input_port name="action_name"/>
            <input_port name="fixation_pose"/>
            <input_port name="frame_id"/>
        </Action>
        <Action ID="GetFloat64">
            <output_port name="number" type="double"/>
            <input_port name="topic" type="std::string"/>
        </Action>
        <Action ID="GetInt16">
            <output_port name="number"/>
            <input_port name="topic"/>
        </Action>
        <Action ID="GetPoseArray">
            <inout_port name="pose_array"/>
            <inout_port name="topic"/>
        </Action>
        <Action ID="GiveFeedback">
            <input_port name="almost_thr" default="850"/>
            <input_port name="correct_blocks"/>
            <input_port name="incorrect_blocks"/>
            <input_port name="personality" default="0"/>
            <input_port name="score"/>
        </Action>
        <Action ID="MoveBase">
            <inout_port name="action_name"/>
            <inout_port name="frame_id"/>
            <inout_port name="goal_pose"/>
        </Action>
        <Action ID="MoveTorso">
            <input_port name="angle"/>
            <input_port name="topic"/>
        </Action>
        <Action ID="ResetVars"/>
        <Action ID="SelectBlock">
            <input_port name="block_list" type="social_cues::BlockList_&lt;std::allocator&lt;void> >"/>
            <output_port name="block_pose" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void> >"/>
            <input_port name="position_in_list" type="std::string"/>
        </Action>
        <Action ID="SelectFieldFromPoseStamped">
            <input_port name="field"/>
            <output_port name="output_val"/>
            <input_port name="pose_stamped"/>
        </Action>
        <Action ID="SelectPose">
            <inout_port name="pose_array"/>
            <inout_port name="pose_stamped"/>
            <inout_port name="position_in_list"/>
        </Action>
        <Action ID="SenseScore">
            <output_port name="score"/>
            <input_port name="score_topic"/>
        </Action>
        <Action ID="Speak">
            <inout_port name="action_name"/>
            <inout_port name="language"/>
            <inout_port name="utterance"/>
            <inout_port name="voice"/>
        </Action>
        <Action ID="TimerAction">
            <input_port name="s_between_success">Time (s) before this node returns SUCCESS. It will return FAILURE in the meanwhile</input_port>
        </Action>
        <Action ID="WaitForXSeconds">
            <input_port name="result" default="SUCCESS">Result after specified time: SUCCESS or FAILURE</input_port>
            <input_port name="seconds" default="5">Time in seconds</input_port>
        </Action>
    </TreeNodesModel>
</root>

